/**
 * iCure Data Stack API Documentation
 *
 * The iCure Data Stack Application API is the native interface to iCure.
 *
 * The version of the OpenAPI document: v2
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.kraken.client.models

/**
 * This entity represents an Address
 *
 * @param telecoms List of other contact details available through telecom services, ex: email, phone number, fax, etc.
 * @param addressType The type of place the address represents, ex: home, office, hospital, clinic, etc.
 * @param descr Descriptive notes about the address
 * @param street Street name
 * @param houseNumber Building / house number
 * @param postboxNumber Post / PO box number
 * @param postalCode Postal/PIN/ZIP/Area code
 * @param city Name of city in the address
 * @param state Name of state in the Address
 * @param country Name / code of country in the address
 * @param note Additional notes
 * @param encryptedSelf The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys.
 */

data class AddressDto (

    /* List of other contact details available through telecom services, ex: email, phone number, fax, etc. */

    val telecoms: kotlin.collections.List<TelecomDto> = emptyList(),

    /* The type of place the address represents, ex: home, office, hospital, clinic, etc.  */

    val addressType: AddressDto.AddressType? = null,

    /* Descriptive notes about the address */

    val descr: kotlin.String? = null,

    /* Street name */

    val street: kotlin.String? = null,

    /* Building / house number */

    val houseNumber: kotlin.String? = null,

    /* Post / PO box number */

    val postboxNumber: kotlin.String? = null,

    /* Postal/PIN/ZIP/Area code */

    val postalCode: kotlin.String? = null,

    /* Name of city in the address */

    val city: kotlin.String? = null,

    /* Name of state in the Address */

    val state: kotlin.String? = null,

    /* Name / code of country in the address */

    val country: kotlin.String? = null,

    /* Additional notes */

    val note: kotlin.String? = null,

    /* The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys. */

    val encryptedSelf: kotlin.String? = null

) {

    /**
     * The type of place the address represents, ex: home, office, hospital, clinic, etc.
     *
     * Values: home,work,vacation,hospital,clinic,hq,other,temporary,postal,diplomatic,reference
     */
    enum class AddressType(val value: kotlin.String) {
        home("home"),
        work("work"),
        vacation("vacation"),
        hospital("hospital"),
        clinic("clinic"),
        hq("hq"),
        other("other"),
        temporary("temporary"),
        postal("postal"),
        diplomatic("diplomatic"),
        reference("reference");
    }
}

