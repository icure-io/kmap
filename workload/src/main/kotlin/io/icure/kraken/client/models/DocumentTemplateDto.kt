/**
 * iCure Data Stack API Documentation
 *
 * The iCure Data Stack Application API is the native interface to iCure.
 *
 * The version of the OpenAPI document: v2
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.kraken.client.models

/**
 *
 *
 * @param id
 * @param tags A tag is an item from a codification system that qualifies an entity as being member of a certain class, whatever the value it might have taken. If the tag qualifies the content of a field, it means that whatever the content of the field, the tag will always apply. For example, the label of a field is qualified using a tag. LOINC is a codification system typically used for tags.
 * @param codes A code is an item from a codification system that qualifies the content of this entity. SNOMED-CT, ICPC-2 or ICD-10 codifications systems can be used for codes
 * @param otherUtis
 * @param rev
 * @param created The timestamp (unix epoch in ms) of creation of this entity, will be filled automatically if missing. Not enforced by the application server.
 * @param modified The date (unix epoch in ms) of the latest modification of this entity, will be filled automatically if missing. Not enforced by the application server.
 * @param author The id of the User that has created this entity, will be filled automatically if missing. Not enforced by the application server.
 * @param responsible The id of the HealthcareParty that is responsible for this entity, will be filled automatically if missing. Not enforced by the application server.
 * @param medicalLocationId The id of the medical location where this entity was created.
 * @param endOfLife Soft delete (unix epoch in ms) timestamp of the object.
 * @param deletionDate hard delete (unix epoch in ms) timestamp of the object. Filled automatically when deletePatient is called.
 * @param attachment
 * @param documentType The type of document, ex: admission, clinical path, document report,invoice, etc.
 * @param mainUti
 * @param name
 * @param attachmentId
 * @param version
 * @param owner
 * @param guid
 * @param group
 * @param descr
 * @param disabled
 * @param specialty
 */

data class DocumentTemplateDto (


    val id: kotlin.String,

    /* A tag is an item from a codification system that qualifies an entity as being member of a certain class, whatever the value it might have taken. If the tag qualifies the content of a field, it means that whatever the content of the field, the tag will always apply. For example, the label of a field is qualified using a tag. LOINC is a codification system typically used for tags. */

    val tags: kotlin.collections.List<CodeStubDto> = emptyList(),

    /* A code is an item from a codification system that qualifies the content of this entity. SNOMED-CT, ICPC-2 or ICD-10 codifications systems can be used for codes */

    val codes: kotlin.collections.List<CodeStubDto> = emptyList(),


    val otherUtis: kotlin.collections.List<kotlin.String> = emptyList(),


    val rev: kotlin.String? = null,

    /* The timestamp (unix epoch in ms) of creation of this entity, will be filled automatically if missing. Not enforced by the application server. */

    val created: kotlin.Long? = null,

    /* The date (unix epoch in ms) of the latest modification of this entity, will be filled automatically if missing. Not enforced by the application server. */

    val modified: kotlin.Long? = null,

    /* The id of the User that has created this entity, will be filled automatically if missing. Not enforced by the application server. */

    val author: kotlin.String? = null,

    /* The id of the HealthcareParty that is responsible for this entity, will be filled automatically if missing. Not enforced by the application server. */

    val responsible: kotlin.String? = null,

    /* The id of the medical location where this entity was created. */

    val medicalLocationId: kotlin.String? = null,

    /* Soft delete (unix epoch in ms) timestamp of the object. */

    val endOfLife: kotlin.Long? = null,

    /* hard delete (unix epoch in ms) timestamp of the object. Filled automatically when deletePatient is called. */

    val deletionDate: kotlin.Long? = null,


    val attachment: ByteArray? = null,

    /* The type of document, ex: admission, clinical path, document report,invoice, etc. */

    val documentType: DocumentTemplateDto.DocumentType? = null,


    val mainUti: kotlin.String? = null,


    val name: kotlin.String? = null,


    val attachmentId: kotlin.String? = null,


    val version: DocumentTemplateDto.Version? = null,


    val owner: kotlin.String? = null,


    val guid: kotlin.String? = null,


    val group: DocumentGroupDto? = null,


    val descr: kotlin.String? = null,


    val disabled: kotlin.String? = null,


    val specialty: CodeStubDto? = null

) {

    /**
     * The type of document, ex: admission, clinical path, document report,invoice, etc.
     *
     * Values: admission,alert,bvtSample,clinicalpath,clinicalsummary,contactreport,quote,invoice,death,discharge,dischargereport,ebirthBabyMedicalform,ebirthBabyNotification,ebirthMotherMedicalform,ebirthMotherNotification,ecareSafeConsultation,epidemiology,intervention,labrequest,labresult,medicaladvisoragreement,medicationschemeelement,note,notification,pharmaceuticalprescription,prescription,productdelivery,quickdischargereport,radiationexposuremonitoring,referral,report,request,result,sumehr,telemonitoring,template,templateAdmin,treatmentsuspension,vaccination
     */
    enum class DocumentType(val value: kotlin.String) {
        admission("admission"),
        alert("alert"),
        bvtSample("bvt_sample"),
        clinicalpath("clinicalpath"),
        clinicalsummary("clinicalsummary"),
        contactreport("contactreport"),
        quote("quote"),
        invoice("invoice"),
        death("death"),
        discharge("discharge"),
        dischargereport("dischargereport"),
        ebirthBabyMedicalform("ebirth_baby_medicalform"),
        ebirthBabyNotification("ebirth_baby_notification"),
        ebirthMotherMedicalform("ebirth_mother_medicalform"),
        ebirthMotherNotification("ebirth_mother_notification"),
        ecareSafeConsultation("ecare_safe_consultation"),
        epidemiology("epidemiology"),
        intervention("intervention"),
        labrequest("labrequest"),
        labresult("labresult"),
        medicaladvisoragreement("medicaladvisoragreement"),
        medicationschemeelement("medicationschemeelement"),
        note("note"),
        notification("notification"),
        pharmaceuticalprescription("pharmaceuticalprescription"),
        prescription("prescription"),
        productdelivery("productdelivery"),
        quickdischargereport("quickdischargereport"),
        radiationexposuremonitoring("radiationexposuremonitoring"),
        referral("referral"),
        report("report"),
        request("request"),
        result("result"),
        sumehr("sumehr"),
        telemonitoring("telemonitoring"),
        template("template"),
        templateAdmin("template_admin"),
        treatmentsuspension("treatmentsuspension"),
        vaccination("vaccination");
    }
    /**
     *
     *
     * Values: v100
     */
    enum class Version(val value: kotlin.String) {
        v100("V1_0_0");
    }
}

